{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jagdi\\\\Desktop\\\\ReactProject\\\\ElectronicsStore\\\\dariyalal_electronics\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\n// import './salesCss.css';\n// import { useState, useEffect } from 'react';\n// import { fetchElectronicsData } from './API';\n// function Sales() {\n//     const today = new Date();\n//     const year = today.getFullYear();\n//     const month = String(today.getMonth() + 1).padStart(2, '0');\n//     const day = String(today.getDate()).padStart(2, '0');\n//     const formattedDate = day + '-' + month + '-' + year;\n\n//     const [rows, setRows] = useState([\n//         { No: '', Item: '', CostPrice: '', Quantity: '', SellPrice: '', Amount: '', Profit: '' }\n//     ]);\n\n//     const [arr, setArr] = useState([]);\n//     useEffect(() => {\n//         fetchElectronicsData()\n//             .then(res => setArr(res));\n//     }, []);\n\n//     const handleInputChange = (index, e) => {\n//         const { name, value } = e.target;\n//         const updatedRows = [...rows];\n//         updatedRows[index][name] = value;\n\n//         const quantity = updatedRows[index].Quantity || 0;\n//         const sellPrice = updatedRows[index].SellPrice || 0;\n//         const costPrice = updatedRows[index].CostPrice || 0;\n\n//         updatedRows[index].Amount = sellPrice * quantity;\n//         updatedRows[index].Profit = sellPrice - costPrice;\n\n//         setRows(updatedRows);\n//     };\n\n//     const handleItemChange = (index, e) => {\n//         const selectedItem = e.target.value;\n//         const selectedItemData = arr.find((item) => item.Item === selectedItem);\n\n//         const updatedRows = [...rows];\n//         updatedRows[index].Item = selectedItem;\n//         updatedRows[index].CostPrice = selectedItemData ? selectedItemData.CostPrice : '';\n\n//         setRows(updatedRows);\n//     };\n\n//     const addRow = () => {\n//         if (allFieldsFilled()) {\n//             setRows([...rows, { Item: '', CostPrice: '', Quantity: '', SellPrice: '', Amount: '', Profit: '', isInvalid: false }]);\n//         }\n//         else {\n//             const updatedRows = [...rows];\n//             updatedRows[rows.length - 1].isInvalid = true;\n//             setRows(updatedRows);\n//         }\n//     };\n\n//     const allFieldsFilled = () => {\n//         const lastRow = rows[rows.length - 1];\n//         return lastRow.Item && lastRow.Quantity && lastRow.SellPrice;\n//     };\n\n//     const handleDeleteRow = (index) => {\n//         const updatedRows = rows.filter((_, i) => i !== index);\n//         setRows(updatedRows);\n//     };\n\n//     useEffect(() => {\n//         const handleKeyPress = (event) => {\n//             if (event.key === 'Enter') {\n//                 event.preventDefault();\n//                 addRow();\n//             }\n//         };\n//         window.addEventListener('keydown', handleKeyPress);\n//         return () => {\n//             window.removeEventListener('keydown', handleKeyPress);\n//         };\n//     }, []);\n\n//     const totalQuantity = rows.reduce((acc, row) => acc + (parseInt(row.Quantity) || 0), 0);\n//     const totalAmount = rows.reduce((acc, row) => acc + (parseFloat(row.Amount) || 0), 0);\n//     const totalProfit = rows.reduce((acc, row) => acc + (parseFloat(row.Profit) || 0), 0);\n\n//     const [searchTerm, setSearchTerm] = useState(\"\");\n//     const filteredData = arr.filter(item =>\n//         item.Item.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n\n//     return (\n//         <>\n//             <h1 id='deSales' className='text-center m-3'>Sales</h1>\n//             <div className='container-fluid px-4'>\n//                 <div className='row my-3'>\n//                     <div className='col'>Date: <span className='fw-bold fst-italic'>{formattedDate}</span></div>\n//                 </div>\n//                 <div className='row'>\n//                     <div className='col table-responsive'>\n//                         <table className='table table-striped table-bordered text-center'>\n//                             <thead>\n//                                 <tr>\n//                                     <th style={{ width: \"3vw\" }}>No.</th>\n//                                     <th style={{ width: \"29vw\" }}>Item</th>\n//                                     <th style={{ width: \"10vw\" }}>Cost Price</th>\n//                                     <th style={{ width: \"5vw\" }}>Quantity</th>\n//                                     <th style={{ width: \"10vw\" }}>Sell Price</th>\n//                                     <th style={{ width: \"15vw\" }}>Amount</th>\n//                                     <th style={{ width: \"15vw\" }}>Profit</th>\n//                                     <th style={{ width: \"5vw\" }}>Action</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody className='align-middle'>\n//                                 {rows.map((row, index) => (\n//                                     <tr key={index}>\n//                                         <td>\n//                                             {index + 1}\n//                                         </td>\n//                                         <td>\n//                                             {/* <select\n//                                                 style={{ width: \"100%\" }}\n//                                                 value={row.Item}\n//                                                 onChange={(e) => handleItemChange(index, e)}\n//                                                 className={'p-2 bg-light ' + (row.isInvalid && !row.Item ? \"invalid-input\" : \"\")}\n//                                                 role=\"button\"\n//                                             >\n//                                                 <option value=''>Select any item!</option>\n//                                                 {arr.map((item) => (\n//                                                     <option key={item.No} value={item.Item}>\n//                                                         {item.Item}\n//                                                     </option>\n//                                                 ))}\n//                                             </select> */}\n//                                             <input\n//                                                 type=\"text\"\n//                                                 className='form-control rounded-pill rounded-end border-0 bg-secondary searchBar'\n//                                                 placeholder='Search for an item...'\n//                                                 aria-label=\"Search\"\n//                                                 style={{ color: \"white\" }}\n//                                                 value={searchTerm}\n//                                                 onChange={(e) => setSearchTerm(e.target.value)}\n//                                             />,\n//                                             {filteredData.length > 0 ? (\n//                                                 <table border=\"1\" className='table table-bordered text-center'>\n//                                                     <tbody>\n//                                                         {filteredData.map((item, index) => (\n//                                                             <tr key={item.id}>\n//                                                                 <td>{item.Item}</td>\n//                                                             </tr>\n//                                                         ))}\n//                                                     </tbody>\n//                                                 </table>\n//                                             ) : (\n//                                                 <p className=\"text-dark fs-4 fw-bold\">No items found!</p>\n//                                             )}\n//                                         </td>\n//                                         <td>\n//                                             {row.CostPrice}\n//                                         </td>\n//                                         <td>\n//                                             <input\n//                                                 type='number'\n//                                                 name='Quantity'\n//                                                 value={row.Quantity}\n//                                                 onChange={(e) => handleInputChange(index, e)}\n//                                                 className={'form-control ' + (row.isInvalid && !row.Quantity ? \"invalid-input\" : \"\")}\n//                                             />\n//                                         </td>\n//                                         <td>\n//                                             <input\n//                                                 type='number'\n//                                                 name='SellPrice'\n//                                                 value={row.SellPrice}\n//                                                 onChange={(e) => handleInputChange(index, e)}\n//                                                 className={'form-control ' + (row.isInvalid && !row.SellPrice ? \"invalid-input\" : \"\")}\n//                                             />\n//                                         </td>\n//                                         <td>\n//                                             {row.Amount}\n//                                         </td>\n//                                         <td>\n//                                             {row.Profit}\n//                                         </td>\n//                                         <td>\n//                                             <button className='btn btn-danger' onClick={() => handleDeleteRow(index)}>Delete</button>\n//                                         </td>\n//                                     </tr>\n//                                 ))}\n//                                 <tr className='fs-5 text-center'>\n//                                     <td colSpan=\"3\" className='text-start px-3'><strong>Total:</strong></td>\n//                                     <td><strong>{totalQuantity}</strong></td>\n//                                     <td></td>\n//                                     <td><strong>{totalAmount.toFixed(2)}</strong></td>\n//                                     <td><strong>{totalProfit.toFixed(2)}</strong></td>\n//                                     <td></td>\n//                                 </tr>\n//                             </tbody>\n//                         </table>\n//                     </div>\n//                 </div>\n//                 <div className='row'>\n//                     <div className='col text-center'>\n//                         <button className='btn btn-primary' onClick={addRow}>\n//                             Add New Row\n//                         </button>\n//                     </div>\n//                 </div>\n//             </div>\n//         </>\n//     );\n// }\n\n// export default Sales;\n\nimport './salesCss.css';\nimport { useState, useEffect } from 'react';\nimport { fetchElectronicsData } from './API';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Sales() {\n  _s();\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = String(today.getMonth() + 1).padStart(2, '0');\n  const day = String(today.getDate()).padStart(2, '0');\n  const formattedDate = day + '-' + month + '-' + year;\n  const [rows, setRows] = useState([{\n    Item: '',\n    CostPrice: '',\n    Quantity: '',\n    SellPrice: '',\n    Amount: '',\n    Profit: '',\n    searchTerm: '',\n    showSuggestions: false\n  }]);\n  const [arr, setArr] = useState([]);\n  useEffect(() => {\n    fetchElectronicsData().then(res => setArr(res));\n  }, []);\n  const handleInputChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedRows = [...rows];\n    updatedRows[index][name] = value;\n    const quantity = updatedRows[index].Quantity || 0;\n    const sellPrice = updatedRows[index].SellPrice || 0;\n    const costPrice = updatedRows[index].CostPrice || 0;\n    updatedRows[index].Amount = sellPrice * quantity;\n    updatedRows[index].Profit = sellPrice - costPrice;\n    setRows(updatedRows);\n  };\n  const handleItemChange = (index, e) => {\n    const searchTerm = e.target.value;\n    const updatedRows = [...rows];\n    updatedRows[index].searchTerm = searchTerm;\n    updatedRows[index].showSuggestions = true;\n    setRows(updatedRows);\n  };\n  const handleSuggestionClick = (index, suggestion) => {\n    const selectedItemData = arr.find(item => item.Item === suggestion);\n    const updatedRows = [...rows];\n    updatedRows[index].Item = suggestion;\n    updatedRows[index].CostPrice = selectedItemData ? selectedItemData.CostPrice : '';\n    updatedRows[index].searchTerm = suggestion; // Update search term to the selected item\n    updatedRows[index].showSuggestions = false; // Hide suggestions\n\n    setRows(updatedRows);\n  };\n  const addRow = () => {\n    if (allFieldsFilled()) {\n      setRows([...rows, {\n        Item: '',\n        CostPrice: '',\n        Quantity: '',\n        SellPrice: '',\n        Amount: '',\n        Profit: '',\n        searchTerm: '',\n        showSuggestions: false\n      }]);\n    }\n  };\n  const allFieldsFilled = () => {\n    const lastRow = rows[rows.length - 1];\n    return lastRow.Item && lastRow.Quantity && lastRow.SellPrice;\n  };\n  const handleDeleteRow = index => {\n    const updatedRows = rows.filter((_, i) => i !== index);\n    setRows(updatedRows);\n  };\n  const totalQuantity = rows.reduce((acc, row) => acc + (parseInt(row.Quantity) || 0), 0);\n  const totalAmount = rows.reduce((acc, row) => acc + (parseFloat(row.Amount) || 0), 0);\n  const totalProfit = rows.reduce((acc, row) => acc + (parseFloat(row.Profit) || 0), 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center m-3\",\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row my-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [\"Date: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fw-bold fst-italic\",\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-bordered text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"3vw\"\n                  },\n                  children: \"No.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"29vw\"\n                  },\n                  children: \"Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"10vw\"\n                  },\n                  children: \"Cost Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"5vw\"\n                  },\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"10vw\"\n                  },\n                  children: \"Sell Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"15vw\"\n                  },\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"15vw\"\n                  },\n                  children: \"Profit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"5vw\"\n                  },\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"align-middle\",\n              children: [rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      position: 'relative'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control rounded-pill border-0 bg-secondary\",\n                      placeholder: \"Search for an item...\",\n                      style: {\n                        color: \"white\"\n                      },\n                      value: row.searchTerm,\n                      onChange: e => handleItemChange(index, e),\n                      onBlur: () => {\n                        const updatedRows = [...rows];\n                        updatedRows[index].showSuggestions = false;\n                        setRows(updatedRows);\n                      },\n                      onFocus: () => {\n                        const updatedRows = [...rows];\n                        updatedRows[index].showSuggestions = true;\n                        setRows(updatedRows);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 49\n                    }, this), row.showSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"list-group position-absolute w-100\",\n                      style: {\n                        top: '100%',\n                        zIndex: 1000\n                      },\n                      children: arr.filter(item => item.Item.toLowerCase().includes(row.searchTerm.toLowerCase())).map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"list-group-item list-group-item-action\",\n                        onClick: () => handleSuggestionClick(index, suggestion.Item),\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        children: suggestion.Item\n                      }, suggestion.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.CostPrice\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"Quantity\",\n                    value: row.Quantity,\n                    onChange: e => handleInputChange(index, e),\n                    className: 'form-control ' + (row.isInvalid && !row.Quantity ? \"invalid-input\" : \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"SellPrice\",\n                    value: row.SellPrice,\n                    onChange: e => handleInputChange(index, e),\n                    className: 'form-control ' + (row.isInvalid && !row.SellPrice ? \"invalid-input\" : \"\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.Amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.Profit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-danger\",\n                    onClick: () => handleDeleteRow(index),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"fs-5 text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"3\",\n                  className: \"text-start px-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 81\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: totalQuantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: totalAmount.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: totalProfit.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: addRow,\n            children: \"Add New Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Sales, \"syH825FHJ2ZHoP9DU9oYjdVRyaw=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["useState","useEffect","fetchElectronicsData","jsxDEV","_jsxDEV","Fragment","_Fragment","Sales","_s","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","rows","setRows","Item","CostPrice","Quantity","SellPrice","Amount","Profit","searchTerm","showSuggestions","arr","setArr","then","res","handleInputChange","index","e","name","value","target","updatedRows","quantity","sellPrice","costPrice","handleItemChange","handleSuggestionClick","suggestion","selectedItemData","find","item","addRow","allFieldsFilled","lastRow","length","handleDeleteRow","filter","_","i","totalQuantity","reduce","acc","row","parseInt","totalAmount","parseFloat","totalProfit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","position","type","placeholder","color","onChange","onBlur","onFocus","top","zIndex","toLowerCase","includes","onClick","cursor","id","isInvalid","colSpan","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/jagdi/Desktop/ReactProject/ElectronicsStore/dariyalal_electronics/src/components/Sales.js"],"sourcesContent":["// import './salesCss.css';\r\n// import { useState, useEffect } from 'react';\r\n// import { fetchElectronicsData } from './API';\r\n// function Sales() {\r\n//     const today = new Date();\r\n//     const year = today.getFullYear();\r\n//     const month = String(today.getMonth() + 1).padStart(2, '0');\r\n//     const day = String(today.getDate()).padStart(2, '0');\r\n//     const formattedDate = day + '-' + month + '-' + year;\r\n\r\n//     const [rows, setRows] = useState([\r\n//         { No: '', Item: '', CostPrice: '', Quantity: '', SellPrice: '', Amount: '', Profit: '' }\r\n//     ]);\r\n\r\n//     const [arr, setArr] = useState([]);\r\n//     useEffect(() => {\r\n//         fetchElectronicsData()\r\n//             .then(res => setArr(res));\r\n//     }, []);\r\n\r\n//     const handleInputChange = (index, e) => {\r\n//         const { name, value } = e.target;\r\n//         const updatedRows = [...rows];\r\n//         updatedRows[index][name] = value;\r\n\r\n//         const quantity = updatedRows[index].Quantity || 0;\r\n//         const sellPrice = updatedRows[index].SellPrice || 0;\r\n//         const costPrice = updatedRows[index].CostPrice || 0;\r\n\r\n//         updatedRows[index].Amount = sellPrice * quantity;\r\n//         updatedRows[index].Profit = sellPrice - costPrice;\r\n\r\n//         setRows(updatedRows);\r\n//     };\r\n\r\n//     const handleItemChange = (index, e) => {\r\n//         const selectedItem = e.target.value;\r\n//         const selectedItemData = arr.find((item) => item.Item === selectedItem);\r\n\r\n//         const updatedRows = [...rows];\r\n//         updatedRows[index].Item = selectedItem;\r\n//         updatedRows[index].CostPrice = selectedItemData ? selectedItemData.CostPrice : '';\r\n\r\n//         setRows(updatedRows);\r\n//     };\r\n\r\n//     const addRow = () => {\r\n//         if (allFieldsFilled()) {\r\n//             setRows([...rows, { Item: '', CostPrice: '', Quantity: '', SellPrice: '', Amount: '', Profit: '', isInvalid: false }]);\r\n//         }\r\n//         else {\r\n//             const updatedRows = [...rows];\r\n//             updatedRows[rows.length - 1].isInvalid = true;\r\n//             setRows(updatedRows);\r\n//         }\r\n//     };\r\n\r\n//     const allFieldsFilled = () => {\r\n//         const lastRow = rows[rows.length - 1];\r\n//         return lastRow.Item && lastRow.Quantity && lastRow.SellPrice;\r\n//     };\r\n\r\n//     const handleDeleteRow = (index) => {\r\n//         const updatedRows = rows.filter((_, i) => i !== index);\r\n//         setRows(updatedRows);\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const handleKeyPress = (event) => {\r\n//             if (event.key === 'Enter') {\r\n//                 event.preventDefault();\r\n//                 addRow();\r\n//             }\r\n//         };\r\n//         window.addEventListener('keydown', handleKeyPress);\r\n//         return () => {\r\n//             window.removeEventListener('keydown', handleKeyPress);\r\n//         };\r\n//     }, []);\r\n\r\n//     const totalQuantity = rows.reduce((acc, row) => acc + (parseInt(row.Quantity) || 0), 0);\r\n//     const totalAmount = rows.reduce((acc, row) => acc + (parseFloat(row.Amount) || 0), 0);\r\n//     const totalProfit = rows.reduce((acc, row) => acc + (parseFloat(row.Profit) || 0), 0);\r\n\r\n//     const [searchTerm, setSearchTerm] = useState(\"\");\r\n//     const filteredData = arr.filter(item =>\r\n//         item.Item.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n\r\n//     return (\r\n//         <>\r\n//             <h1 id='deSales' className='text-center m-3'>Sales</h1>\r\n//             <div className='container-fluid px-4'>\r\n//                 <div className='row my-3'>\r\n//                     <div className='col'>Date: <span className='fw-bold fst-italic'>{formattedDate}</span></div>\r\n//                 </div>\r\n//                 <div className='row'>\r\n//                     <div className='col table-responsive'>\r\n//                         <table className='table table-striped table-bordered text-center'>\r\n//                             <thead>\r\n//                                 <tr>\r\n//                                     <th style={{ width: \"3vw\" }}>No.</th>\r\n//                                     <th style={{ width: \"29vw\" }}>Item</th>\r\n//                                     <th style={{ width: \"10vw\" }}>Cost Price</th>\r\n//                                     <th style={{ width: \"5vw\" }}>Quantity</th>\r\n//                                     <th style={{ width: \"10vw\" }}>Sell Price</th>\r\n//                                     <th style={{ width: \"15vw\" }}>Amount</th>\r\n//                                     <th style={{ width: \"15vw\" }}>Profit</th>\r\n//                                     <th style={{ width: \"5vw\" }}>Action</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody className='align-middle'>\r\n//                                 {rows.map((row, index) => (\r\n//                                     <tr key={index}>\r\n//                                         <td>\r\n//                                             {index + 1}\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             {/* <select\r\n//                                                 style={{ width: \"100%\" }}\r\n//                                                 value={row.Item}\r\n//                                                 onChange={(e) => handleItemChange(index, e)}\r\n//                                                 className={'p-2 bg-light ' + (row.isInvalid && !row.Item ? \"invalid-input\" : \"\")}\r\n//                                                 role=\"button\"\r\n//                                             >\r\n//                                                 <option value=''>Select any item!</option>\r\n//                                                 {arr.map((item) => (\r\n//                                                     <option key={item.No} value={item.Item}>\r\n//                                                         {item.Item}\r\n//                                                     </option>\r\n//                                                 ))}\r\n//                                             </select> */}\r\n//                                             <input\r\n//                                                 type=\"text\"\r\n//                                                 className='form-control rounded-pill rounded-end border-0 bg-secondary searchBar'\r\n//                                                 placeholder='Search for an item...'\r\n//                                                 aria-label=\"Search\"\r\n//                                                 style={{ color: \"white\" }}\r\n//                                                 value={searchTerm}\r\n//                                                 onChange={(e) => setSearchTerm(e.target.value)}\r\n//                                             />,\r\n//                                             {filteredData.length > 0 ? (\r\n//                                                 <table border=\"1\" className='table table-bordered text-center'>\r\n//                                                     <tbody>\r\n//                                                         {filteredData.map((item, index) => (\r\n//                                                             <tr key={item.id}>\r\n//                                                                 <td>{item.Item}</td>\r\n//                                                             </tr>\r\n//                                                         ))}\r\n//                                                     </tbody>\r\n//                                                 </table>\r\n//                                             ) : (\r\n//                                                 <p className=\"text-dark fs-4 fw-bold\">No items found!</p>\r\n//                                             )}\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             {row.CostPrice}\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             <input\r\n//                                                 type='number'\r\n//                                                 name='Quantity'\r\n//                                                 value={row.Quantity}\r\n//                                                 onChange={(e) => handleInputChange(index, e)}\r\n//                                                 className={'form-control ' + (row.isInvalid && !row.Quantity ? \"invalid-input\" : \"\")}\r\n//                                             />\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             <input\r\n//                                                 type='number'\r\n//                                                 name='SellPrice'\r\n//                                                 value={row.SellPrice}\r\n//                                                 onChange={(e) => handleInputChange(index, e)}\r\n//                                                 className={'form-control ' + (row.isInvalid && !row.SellPrice ? \"invalid-input\" : \"\")}\r\n//                                             />\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             {row.Amount}\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             {row.Profit}\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             <button className='btn btn-danger' onClick={() => handleDeleteRow(index)}>Delete</button>\r\n//                                         </td>\r\n//                                     </tr>\r\n//                                 ))}\r\n//                                 <tr className='fs-5 text-center'>\r\n//                                     <td colSpan=\"3\" className='text-start px-3'><strong>Total:</strong></td>\r\n//                                     <td><strong>{totalQuantity}</strong></td>\r\n//                                     <td></td>\r\n//                                     <td><strong>{totalAmount.toFixed(2)}</strong></td>\r\n//                                     <td><strong>{totalProfit.toFixed(2)}</strong></td>\r\n//                                     <td></td>\r\n//                                 </tr>\r\n//                             </tbody>\r\n//                         </table>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className='row'>\r\n//                     <div className='col text-center'>\r\n//                         <button className='btn btn-primary' onClick={addRow}>\r\n//                             Add New Row\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default Sales;\r\n\r\nimport './salesCss.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { fetchElectronicsData } from './API';\r\n\r\nfunction Sales() {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0');\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    const formattedDate = day + '-' + month + '-' + year;\r\n\r\n    const [rows, setRows] = useState([\r\n        { Item: '', CostPrice: '', Quantity: '', SellPrice: '', Amount: '', Profit: '', searchTerm: '', showSuggestions: false }\r\n    ]);\r\n\r\n    const [arr, setArr] = useState([]);\r\n    useEffect(() => {\r\n        fetchElectronicsData()\r\n            .then(res => setArr(res));\r\n    }, []);\r\n\r\n    const handleInputChange = (index, e) => {\r\n        const { name, value } = e.target;\r\n        const updatedRows = [...rows];\r\n        updatedRows[index][name] = value;\r\n\r\n        const quantity = updatedRows[index].Quantity || 0;\r\n        const sellPrice = updatedRows[index].SellPrice || 0;\r\n        const costPrice = updatedRows[index].CostPrice || 0;\r\n\r\n        updatedRows[index].Amount = sellPrice * quantity;\r\n        updatedRows[index].Profit = sellPrice - costPrice;\r\n\r\n        setRows(updatedRows);\r\n    };\r\n\r\n    const handleItemChange = (index, e) => {\r\n        const searchTerm = e.target.value;\r\n        const updatedRows = [...rows];\r\n        updatedRows[index].searchTerm = searchTerm;\r\n        updatedRows[index].showSuggestions = true;\r\n\r\n        setRows(updatedRows);\r\n    };\r\n\r\n    const handleSuggestionClick = (index, suggestion) => {\r\n        const selectedItemData = arr.find((item) => item.Item === suggestion);\r\n\r\n        const updatedRows = [...rows];\r\n        updatedRows[index].Item = suggestion;\r\n        updatedRows[index].CostPrice = selectedItemData ? selectedItemData.CostPrice : '';\r\n        updatedRows[index].searchTerm = suggestion; // Update search term to the selected item\r\n        updatedRows[index].showSuggestions = false; // Hide suggestions\r\n\r\n        setRows(updatedRows);\r\n    };\r\n\r\n    const addRow = () => {\r\n        if (allFieldsFilled()) {\r\n            setRows([...rows, { Item: '', CostPrice: '', Quantity: '', SellPrice: '', Amount: '', Profit: '', searchTerm: '', showSuggestions: false }]);\r\n        }\r\n    };\r\n\r\n    const allFieldsFilled = () => {\r\n        const lastRow = rows[rows.length - 1];\r\n        return lastRow.Item && lastRow.Quantity && lastRow.SellPrice;\r\n    };\r\n\r\n    const handleDeleteRow = (index) => {\r\n        const updatedRows = rows.filter((_, i) => i !== index);\r\n        setRows(updatedRows);\r\n    };\r\n\r\n    const totalQuantity = rows.reduce((acc, row) => acc + (parseInt(row.Quantity) || 0), 0);\r\n    const totalAmount = rows.reduce((acc, row) => acc + (parseFloat(row.Amount) || 0), 0);\r\n    const totalProfit = rows.reduce((acc, row) => acc + (parseFloat(row.Profit) || 0), 0);\r\n\r\n    return (\r\n        <>\r\n            <h1 className='text-center m-3'>Sales</h1>\r\n            <div className='container-fluid px-4'>\r\n                <div className='row my-3'>\r\n                    <div className='col'>Date: <span className='fw-bold fst-italic'>{formattedDate}</span></div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col table-responsive'>\r\n                        <table className='table table-striped table-bordered text-center'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: \"3vw\" }}>No.</th>\r\n                                    <th style={{ width: \"29vw\" }}>Item</th>\r\n                                    <th style={{ width: \"10vw\" }}>Cost Price</th>\r\n                                    <th style={{ width: \"5vw\" }}>Quantity</th>\r\n                                    <th style={{ width: \"10vw\" }}>Sell Price</th>\r\n                                    <th style={{ width: \"15vw\" }}>Amount</th>\r\n                                    <th style={{ width: \"15vw\" }}>Profit</th>\r\n                                    <th style={{ width: \"5vw\" }}>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='align-middle'>\r\n                                {rows.map((row, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>\r\n                                            <div style={{ position: 'relative' }}>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className='form-control rounded-pill border-0 bg-secondary'\r\n                                                    placeholder='Search for an item...'\r\n                                                    style={{ color: \"white\" }}\r\n                                                    value={row.searchTerm}\r\n                                                    onChange={(e) => handleItemChange(index, e)}\r\n                                                    onBlur={() => {\r\n                                                        const updatedRows = [...rows];\r\n                                                        updatedRows[index].showSuggestions = false;\r\n                                                        setRows(updatedRows);\r\n                                                    }}\r\n                                                    onFocus={() => {\r\n                                                        const updatedRows = [...rows];\r\n                                                        updatedRows[index].showSuggestions = true;\r\n                                                        setRows(updatedRows);\r\n                                                    }}\r\n                                                />\r\n                                                {row.showSuggestions && (\r\n                                                    <ul className=\"list-group position-absolute w-100\" style={{ top: '100%', zIndex: 1000 }}>\r\n                                                        {arr.filter(item => item.Item.toLowerCase().includes(row.searchTerm.toLowerCase())).map((suggestion) => (\r\n                                                            <li\r\n                                                                key={suggestion.id}\r\n                                                                className=\"list-group-item list-group-item-action\"\r\n                                                                onClick={() => handleSuggestionClick(index, suggestion.Item)}\r\n                                                                style={{ cursor: \"pointer\" }}\r\n                                                            >\r\n                                                                {suggestion.Item}\r\n                                                            </li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                )}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{row.CostPrice}</td>\r\n                                        <td>\r\n                                            <input\r\n                                                type='number'\r\n                                                name='Quantity'\r\n                                                value={row.Quantity}\r\n                                                onChange={(e) => handleInputChange(index, e)}\r\n                                                className={'form-control ' + (row.isInvalid && !row.Quantity ? \"invalid-input\" : \"\")}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input\r\n                                                type='number'\r\n                                                name='SellPrice'\r\n                                                value={row.SellPrice}\r\n                                                onChange={(e) => handleInputChange(index, e)}\r\n                                                className={'form-control ' + (row.isInvalid && !row.SellPrice ? \"invalid-input\" : \"\")}\r\n                                            />\r\n                                        </td>\r\n                                        <td>{row.Amount}</td>\r\n                                        <td>{row.Profit}</td>\r\n                                        <td>\r\n                                            <button className='btn btn-danger' onClick={() => handleDeleteRow(index)}>Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                <tr className='fs-5 text-center'>\r\n                                    <td colSpan=\"3\" className='text-start px-3'><strong>Total:</strong></td>\r\n                                    <td><strong>{totalQuantity}</strong></td>\r\n                                    <td></td>\r\n                                    <td><strong>{totalAmount.toFixed(2)}</strong></td>\r\n                                    <td><strong>{totalProfit.toFixed(2)}</strong></td>\r\n                                    <td></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col text-center'>\r\n                        <button className='btn btn-primary' onClick={addRow}>\r\n                            Add New Row\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sales;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,gBAAgB;AACvB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,oBAAoB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,KAAK,GAAG,IAAIC,IAAI,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}