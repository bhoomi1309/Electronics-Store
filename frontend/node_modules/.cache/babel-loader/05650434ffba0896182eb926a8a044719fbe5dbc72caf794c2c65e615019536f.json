{"ast":null,"code":"// const apiURL = 'https://667323296ca902ae11b33da7.mockapi.io/Electronics';\nconst apiStock = 'http://localhost:3000';\nexport const fetchElectronicsData = () => {\n  const arr = fetch(apiStock + '/stock').then(res => res.json());\n  return arr;\n};\nexport const addElectronics = (data, navigate) => {\n  fetch(apiStock + '/modifyStock', {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).then(res => {\n    navigate('/stock');\n  });\n};\nexport const editElectronics = (data, id, navigate) => {\n  fetch(apiStock + '/modifyStock/' + id, {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).then(res => {\n    navigate('/stock');\n  });\n};\nexport const deleteElectronics = async id => {\n  fetch(apiStock + '/stock/' + id, {\n    method: \"DELETE\"\n  }).then(res => res.json());\n};\nexport const renumberElectronics = async id => {\n  const response = await fetch(apiStock + '/stock/' + id, {\n    method: 'POST',\n    body: JSON.stringify({\n      deletedNo: id\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n};\n\n// const apiBill=\"https://667323296ca902ae11b33da7.mockapi.io/BillData\";\nconst apiBill = 'http://localhost:3001';\nexport const fetchBillData = () => {\n  const arr = fetch(apiBill + '/sales').then(res => res.json());\n  return arr;\n};\nexport const getBillById = async id => {\n  const res = await fetch(apiBill + '/sales/' + id, {\n    method: \"GET\"\n  });\n  const data = await res.json();\n  return data;\n};\nexport const fetchLatestBillNo = async () => {\n  try {\n    const response = await fetch('/api/bills/lastBill'); // Adjust the endpoint as needed\n    if (!response.ok) {\n      throw new Error('Failed to fetch latest bill number');\n    }\n    const data = await response.json();\n    return data.latestNo; // Assuming your API returns an object with the latest bill number\n  } catch (error) {\n    console.error('Error fetching latest bill number:', error);\n    return 0; // Return 0 or handle as needed\n  }\n};\nexport const addBill = (data, No, navigate) => {\n  fetch(apiBill + '/sales/bill', {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).then(res => {\n    navigate('/sales');\n  });\n};\nexport const deleteBill = async (id, navigate) => {\n  fetch(apiBill + '/sales/' + id, {\n    method: \"DELETE\"\n  }).then(res => res.json()).then(res => {\n    navigate('/sales');\n  });\n};","map":{"version":3,"names":["apiStock","fetchElectronicsData","arr","fetch","then","res","json","addElectronics","data","navigate","method","body","JSON","stringify","headers","editElectronics","id","deleteElectronics","renumberElectronics","response","deletedNo","apiBill","fetchBillData","getBillById","fetchLatestBillNo","ok","Error","latestNo","error","console","addBill","No","deleteBill"],"sources":["C:/Users/jagdi/Desktop/ReactProject/ElectronicsStore/dariyalal_electronics/src/components/API.js"],"sourcesContent":["// const apiURL = 'https://667323296ca902ae11b33da7.mockapi.io/Electronics';\r\nconst apiStock='http://localhost:3000';\r\nexport const fetchElectronicsData=()=>{\r\n    const arr=fetch(apiStock+'/stock').then(res=>res.json());\r\n    return arr;\r\n}\r\nexport const addElectronics=(data,navigate)=>{\r\n    fetch(apiStock+'/modifyStock',{\r\n        method:\"POST\",\r\n        body:JSON.stringify(data),\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n        navigate('/stock');\r\n    });\r\n}\r\nexport const editElectronics=(data,id,navigate)=>{\r\n    fetch(apiStock+'/modifyStock/'+id,{\r\n        method:\"PUT\",\r\n        body:JSON.stringify(data),\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n        navigate('/stock');\r\n    });\r\n}\r\nexport const deleteElectronics = async (id) => {    \r\n    fetch(apiStock+'/stock/'+id, \r\n        {method:\"DELETE\"}\r\n    )\r\n    .then(res=>res.json());\r\n}\r\nexport const renumberElectronics = async (id) => {\r\n    const response = await fetch(apiStock+'/stock/'+id, {\r\n        method: 'POST',\r\n        body: JSON.stringify({ deletedNo: id }),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\n\r\n\r\n// const apiBill=\"https://667323296ca902ae11b33da7.mockapi.io/BillData\";\r\nconst apiBill='http://localhost:3001';\r\nexport const fetchBillData=()=>{\r\n    const arr=fetch(apiBill+'/sales').then(res=>res.json());\r\n    return arr;\r\n}\r\nexport const getBillById=async (id)=>{\r\n    const res=await fetch(apiBill+'/sales/'+id,{method:\"GET\"});\r\n    const data=await res.json();\r\n    return data;\r\n};\r\nexport const fetchLatestBillNo = async () => {\r\n    try {\r\n        const response = await fetch('/api/bills/lastBill'); // Adjust the endpoint as needed\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch latest bill number');\r\n        }\r\n        const data = await response.json();\r\n        return data.latestNo; // Assuming your API returns an object with the latest bill number\r\n    } catch (error) {\r\n        console.error('Error fetching latest bill number:', error);\r\n        return 0; // Return 0 or handle as needed\r\n    }\r\n};\r\n\r\nexport const addBill=(data,No,navigate)=>{\r\n    fetch(apiBill+'/sales/bill',{\r\n        method:\"POST\",\r\n        body:JSON.stringify(data),\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n        navigate('/sales');\r\n    });\r\n}\r\nexport const deleteBill = async (id,navigate) => {    \r\n    fetch(apiBill+'/sales/'+id, {method: \"DELETE\"})\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n        navigate('/sales');\r\n    });\r\n};"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAC,uBAAuB;AACtC,OAAO,MAAMC,oBAAoB,GAACA,CAAA,KAAI;EAClC,MAAMC,GAAG,GAACC,KAAK,CAACH,QAAQ,GAAC,QAAQ,CAAC,CAACI,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EACxD,OAAOJ,GAAG;AACd,CAAC;AACD,OAAO,MAAMK,cAAc,GAACA,CAACC,IAAI,EAACC,QAAQ,KAAG;EACzCN,KAAK,CAACH,QAAQ,GAAC,cAAc,EAAC;IAC1BU,MAAM,EAAC,MAAM;IACbC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IACzBM,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC,CACDV,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAACC,GAAG,IAAE;IACPI,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAMM,eAAe,GAACA,CAACP,IAAI,EAACQ,EAAE,EAACP,QAAQ,KAAG;EAC7CN,KAAK,CAACH,QAAQ,GAAC,eAAe,GAACgB,EAAE,EAAC;IAC9BN,MAAM,EAAC,KAAK;IACZC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IACzBM,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC,CACDV,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAACC,GAAG,IAAE;IACPI,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAMQ,iBAAiB,GAAG,MAAOD,EAAE,IAAK;EAC3Cb,KAAK,CAACH,QAAQ,GAAC,SAAS,GAACgB,EAAE,EACvB;IAACN,MAAM,EAAC;EAAQ,CACpB,CAAC,CACAN,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;AAC1B,CAAC;AACD,OAAO,MAAMY,mBAAmB,GAAG,MAAOF,EAAE,IAAK;EAC7C,MAAMG,QAAQ,GAAG,MAAMhB,KAAK,CAACH,QAAQ,GAAC,SAAS,GAACgB,EAAE,EAAE;IAChDN,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEO,SAAS,EAAEJ;IAAG,CAAC,CAAC;IACvCF,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EACF,MAAMN,IAAI,GAAG,MAAMW,QAAQ,CAACb,IAAI,CAAC,CAAC;EAClC,OAAOE,IAAI;AACf,CAAC;;AAID;AACA,MAAMa,OAAO,GAAC,uBAAuB;AACrC,OAAO,MAAMC,aAAa,GAACA,CAAA,KAAI;EAC3B,MAAMpB,GAAG,GAACC,KAAK,CAACkB,OAAO,GAAC,QAAQ,CAAC,CAACjB,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EACvD,OAAOJ,GAAG;AACd,CAAC;AACD,OAAO,MAAMqB,WAAW,GAAC,MAAOP,EAAE,IAAG;EACjC,MAAMX,GAAG,GAAC,MAAMF,KAAK,CAACkB,OAAO,GAAC,SAAS,GAACL,EAAE,EAAC;IAACN,MAAM,EAAC;EAAK,CAAC,CAAC;EAC1D,MAAMF,IAAI,GAAC,MAAMH,GAAG,CAACC,IAAI,CAAC,CAAC;EAC3B,OAAOE,IAAI;AACf,CAAC;AACD,OAAO,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMhB,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACrD,IAAI,CAACgB,QAAQ,CAACM,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;IACzD;IACA,MAAMlB,IAAI,GAAG,MAAMW,QAAQ,CAACb,IAAI,CAAC,CAAC;IAClC,OAAOE,IAAI,CAACmB,QAAQ,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,OAAO,CAAC,CAAC,CAAC;EACd;AACJ,CAAC;AAED,OAAO,MAAME,OAAO,GAACA,CAACtB,IAAI,EAACuB,EAAE,EAACtB,QAAQ,KAAG;EACrCN,KAAK,CAACkB,OAAO,GAAC,aAAa,EAAC;IACxBX,MAAM,EAAC,MAAM;IACbC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IACzBM,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC,CACDV,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAACC,GAAG,IAAE;IACPI,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAMuB,UAAU,GAAG,MAAAA,CAAOhB,EAAE,EAACP,QAAQ,KAAK;EAC7CN,KAAK,CAACkB,OAAO,GAAC,SAAS,GAACL,EAAE,EAAE;IAACN,MAAM,EAAE;EAAQ,CAAC,CAAC,CAC9CN,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAACC,GAAG,IAAE;IACPI,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}