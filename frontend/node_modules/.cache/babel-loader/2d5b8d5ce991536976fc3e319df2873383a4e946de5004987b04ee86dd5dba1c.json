{"ast":null,"code":"const apiURL = 'https://667323296ca902ae11b33da7.mockapi.io/Electronics';\nconst api = 'http://localhost:3000';\nexport const fetchElectronicsData = () => {\n  const arr = fetch(api + '/stock').then(res => res.json());\n  return arr;\n};\n// export const addElectronics=(data,navigate)=>{\n//     fetch(api+'/modifyStock',{\n//         method:\"POST\",\n//         body:JSON.stringify(data),\n//         headers:{\n//             \"Content-Type\":\"application/json\"\n//         }\n//     })\n//     .then(res=>res.json())\n//     .then(res=>{\n//         navigate('/stock');\n//     });\n// }\nexport const addElectronics = (data, navigate) => {\n  console.log('Data being sent:', data);\n  fetch(api + '/modifyStock', {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    if (!res.ok) {\n      // Handle error responses (non-200 range)\n      return res.json().then(error => {\n        throw new Error(error.message);\n      });\n    }\n    return res.json();\n  }).then(res => {\n    console.log(res.message); // This will log 'Stock added successfully'\n    navigate('/stock'); // Redirect to stock page on success\n  }).catch(error => {\n    console.error('Error:', error.message); // Log the error message from the server\n  });\n};\nexport const editElectronics = (data, id, navigate) => {\n  fetch(api + '/modifyStock/' + id, {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).then(res => {\n    navigate('/stock');\n  });\n};\nexport const deleteElectronics = async id => {\n  fetch(apiURL + '/' + id, {\n    method: \"DELETE\"\n  }).then(res => res.json());\n};\nconst apiBill = \"https://667323296ca902ae11b33da7.mockapi.io/BillData\";\nexport const fetchBillData = () => {\n  const arr = fetch(apiBill).then(res => res.json());\n  return arr;\n};\nexport const addBill = (data, navigate) => {\n  fetch(apiBill, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).then(res => {\n    navigate('/sales');\n  });\n};\nexport const deleteBill = async (id, navigate) => {\n  fetch(apiBill + '/' + id, {\n    method: \"DELETE\"\n  }).then(res => res.json()).then(res => {\n    navigate('/sales');\n  });\n};\nexport const getBillById = async id => {\n  const res = await fetch(apiBill + '/' + id, {\n    method: \"GET\"\n  });\n  const data = await res.json();\n  return data;\n};","map":{"version":3,"names":["apiURL","api","fetchElectronicsData","arr","fetch","then","res","json","addElectronics","data","navigate","console","log","method","body","JSON","stringify","headers","ok","error","Error","message","catch","editElectronics","id","deleteElectronics","apiBill","fetchBillData","addBill","deleteBill","getBillById"],"sources":["C:/Users/jagdi/Desktop/ReactProject/ElectronicsStore/dariyalal_electronics/src/components/API.js"],"sourcesContent":["const apiURL = 'https://667323296ca902ae11b33da7.mockapi.io/Electronics';\r\nconst api='http://localhost:3000';\r\nexport const fetchElectronicsData=()=>{\r\n    const arr=fetch(api+'/stock').then(res=>res.json());\r\n    return arr;\r\n}\r\n// export const addElectronics=(data,navigate)=>{\r\n//     fetch(api+'/modifyStock',{\r\n//         method:\"POST\",\r\n//         body:JSON.stringify(data),\r\n//         headers:{\r\n//             \"Content-Type\":\"application/json\"\r\n//         }\r\n//     })\r\n//     .then(res=>res.json())\r\n//     .then(res=>{\r\n//         navigate('/stock');\r\n//     });\r\n// }\r\nexport const addElectronics = (data, navigate) => {\r\n    console.log('Data being sent:', data);\r\n    fetch(api + '/modifyStock', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (!res.ok) {\r\n        // Handle error responses (non-200 range)\r\n        return res.json().then(error => { throw new Error(error.message); });\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(res => {\r\n      console.log(res.message); // This will log 'Stock added successfully'\r\n      navigate('/stock'); // Redirect to stock page on success\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error.message); // Log the error message from the server\r\n    });\r\n  };\r\n  \r\nexport const editElectronics=(data,id,navigate)=>{\r\n    fetch(api+'/modifyStock/'+id,{\r\n        method:\"PUT\",\r\n        body:JSON.stringify(data),\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n        navigate('/stock');\r\n    });\r\n}\r\nexport const deleteElectronics = async (id) => {    \r\n    fetch(apiURL+'/'+id, {method: \"DELETE\"})\r\n    .then(res=>res.json());\r\n};\r\n\r\n\r\nconst apiBill=\"https://667323296ca902ae11b33da7.mockapi.io/BillData\";\r\nexport const fetchBillData=()=>{\r\n    const arr=fetch(apiBill).then(res=>res.json());\r\n    return arr;\r\n}\r\nexport const addBill=(data,navigate)=>{\r\n    fetch(apiBill,{\r\n        method:\"POST\",\r\n        body:JSON.stringify(data),\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n        navigate('/sales');\r\n    });\r\n}\r\nexport const deleteBill = async (id,navigate) => {    \r\n    fetch(apiBill+'/'+id, {method: \"DELETE\"})\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n        navigate('/sales');\r\n    });\r\n};\r\nexport const getBillById=async (id)=>{\r\n    const res=await fetch(apiBill+'/'+id,{method:\"GET\"});\r\n    const data=await res.json();\r\n    return data;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}