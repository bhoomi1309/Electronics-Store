{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jagdi\\\\Desktop\\\\ReactProject\\\\ElectronicsStore\\\\dariyalal_electronics\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { fetchBillData, deleteBill, getBillById, renumberBills, updateElectronics, fetchElectronicsData } from './API';\n// import Swal from 'sweetalert2';\n// import './style.css';\n// function Sales() {\n\n//     const [arr, setArr] = useState([]);\n//     const [electronics, setElectronics] = useState([]);\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             const billData = await fetchBillData();\n//             const electronicsData = await fetchElectronicsData();\n//             setArr(billData);\n//             setElectronics(electronicsData);\n//         };\n//         fetchData();    \n//     }, []);\n\n//     const navigate = useNavigate();\n\n//     const addRow = () => {\n//         const billNo = arr.length + 1;\n//         navigate('/sales/bill/' + billNo);\n//     };\n\n//     const handleDeleteRow = async (id) => {\n//         Swal.fire({\n//             title: \"Are you sure?\",\n//             text: \"You won't be able to retrieve the Bill \"+id+\" back!\",\n//             icon: \"warning\",\n//             showCancelButton: true,\n//             confirmButtonColor: \"#3085d6\",\n//             cancelButtonColor: \"#d33\",\n//             confirmButtonText: \"Yes, delete it!\"\n//         })\n//             .then(async (result) => {\n//                 if (result.isConfirmed) {\n//                     const billData = await getBillById(id);\n//                     if (!billData) {\n//                         alert('Bill not found.');\n//                         return;\n//                     }\n\n//                     for (let i = 0; i < billData.ItemNames.length; i++) {\n//                         const itemName = billData.ItemNames[i];\n//                         const soldQuantity = parseInt(billData.Quantities[i]);\n//                         const itemData = electronics.find(item => item.Item === itemName);\n//                         if (itemData) {\n//                             const newStock = itemData.Available + soldQuantity;\n//                             const stockData = {\n//                                 Item: itemData.Item,\n//                                 Available: newStock,\n//                                 CostPrice: parseInt(itemData.CostPrice)\n//                             };\n//                             updateElectronics(stockData, itemData.No);\n//                         }\n//                     }\n//                     await deleteBill(id, navigate);\n//                     await renumberBills(id);\n//                     const updatedArr = await fetchBillData();\n//                     setArr(updatedArr);\n//                 }\n//             });\n//     }\n\n//     const totalAmount = arr.reduce((acc, row) => acc + (parseFloat(row.Amount) || 0), 0);\n//     const totalProfit = arr.reduce((acc, row) => acc + (parseFloat(row.Profit) || 0), 0);\n\n//     const handleRowClick = async (id) => {\n//         await getBillById(id);\n//         navigate('/sales/' + id);\n//     };\n\n//     return (\n//         <>\n//             <h1 \n//                 className='text-center m-4' \n//                 style={{ fontSize: \"50px\", margin: \"25px 30px 25px 30px\" }}\n//             >Sales</h1>\n//             <div className='container-fluid px-4'>\n//                 <div className='row'>\n//                     <div className='col my-4 mx-1 fs-5'>\n//                         Date: \n//                         <span className='ms-2 align-middle'>\n//                             <input\n//                                 type='date'\n//                                 className='form-control d-inline-block w-auto dateCursor'\n//                             />\n//                         </span>\n//                     </div>\n//                 </div>\n//                 <div className='row'>\n//                     <div className='col table-responsive'>\n//                         <table className='table table-striped table-hover table-bordered text-center tableSales'>\n//                             <thead>\n//                                 <tr>\n//                                     <th style={{ width: \"3vw\" }}>No.</th>\n//                                     <th style={{ width: \"5vw\" }}>Date</th>\n//                                     <th className='text-start' style={{ width: \"29vw\" }}>Customer</th>\n//                                     <th style={{ width: \"10vw\" }}>Profit</th>\n//                                     <th style={{ width: \"10vw\" }}>Amount</th>\n//                                     <th style={{ width: \"5vw\" }}>Action</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody className='align-middle'>\n//                                 {arr.map((row, index) => (\n//                                     <tr \n//                                         key={index} \n//                                         onClick={() => handleRowClick(row.No)} \n//                                         style={{ cursor: 'pointer' }}\n//                                     >\n//                                         <td>\n//                                             {index + 1}\n//                                         </td>\n//                                         <td>\n//                                             {row.date}\n//                                         </td>\n//                                         <td className='text-start'>\n//                                             {row.CustomerName}\n//                                         </td>\n//                                         <td>\n//                                             {row.Profit}\n//                                         </td>\n//                                         <td>\n//                                             {row.Amount}\n//                                         </td>\n//                                         <td>\n//                                             <button className='btn btn-outline-danger border-2 fw-bold' onClick={(e) => {\n//                                                 e.stopPropagation();\n//                                                 handleDeleteRow(row.No)\n//                                             }\n//                                             }>Delete</button>\n//                                         </td>\n//                                     </tr>\n//                                 ))}\n//                                 <tr className='fs-5 text-center'>\n//                                     <td colSpan=\"3\" className='text-start px-3'><strong>Total:</strong></td>\n//                                     <td><strong>{totalProfit}</strong></td>\n//                                     <td><strong>{totalAmount}</strong></td>\n//                                     <td></td>\n//                                 </tr>\n//                             </tbody>\n//                         </table>\n//                     </div>\n//                 </div>\n//                 <div className='row'>\n//                     <div className='col text-center'>\n//                         <button className='btn btn-primary' onClick={addRow}>\n//                             Add New Bill\n//                         </button>\n//                     </div>\n//                 </div>\n//             </div>\n//         </>\n//     );\n// }\n\n// export default Sales;\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchBillData, deleteBill, getBillById, renumberBills, updateElectronics, fetchElectronicsData } from './API';\nimport Swal from 'sweetalert2';\nimport './style.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Sales() {\n  _s();\n  const [arr, setArr] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(''); // State for selected date\n\n  useEffect(() => {\n    fetchBillData().then(res => setArr(res));\n  }, []);\n  const [electronics, setElectronics] = useState([]);\n  useEffect(() => {\n    fetchElectronicsData().then(res => setElectronics(res));\n  }, []);\n  const navigate = useNavigate();\n  const addRow = () => {\n    const billNo = arr.length + 1;\n    navigate('/sales/bill/' + billNo);\n  };\n  const handleDeleteRow = async id => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to retrieve the Bill \" + id + \" back!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(async result => {\n      if (result.isConfirmed) {\n        const billData = await getBillById(id);\n        if (!billData) {\n          alert('Bill not found.');\n          return;\n        }\n        for (let i = 0; i < billData.ItemNames.length; i++) {\n          const itemName = billData.ItemNames[i];\n          const soldQuantity = parseInt(billData.Quantities[i]);\n          const itemData = electronics.find(item => item.Item === itemName);\n          if (itemData) {\n            const newStock = itemData.Available + soldQuantity;\n            const stockData = {\n              Item: itemData.Item,\n              Available: newStock,\n              CostPrice: parseInt(itemData.CostPrice)\n            };\n            updateElectronics(stockData, itemData.No);\n          }\n        }\n        await deleteBill(id, navigate);\n        await renumberBills(id);\n        const updatedArr = await fetchBillData();\n        setArr(updatedArr);\n      }\n    });\n  };\n  const totalAmount = arr.reduce((acc, row) => acc + (parseFloat(row.Amount) || 0), 0);\n  const totalProfit = arr.reduce((acc, row) => acc + (parseFloat(row.Profit) || 0), 0);\n  const handleRowClick = async id => {\n    await getBillById(id);\n    navigate('/sales/' + id);\n  };\n\n  // Filter the bills based on the selected date\n  const filteredBills = selectedDate ? arr.filter(row => {\n    console.log(row.date);\n    return row.date === selectedDate;\n  }) : arr;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center m-4\",\n      style: {\n        fontSize: \"50px\",\n        margin: \"25px 30px 25px 30px\"\n      },\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col my-4 mx-1 fs-5\",\n          children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-2 align-middle\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control d-inline-block w-auto dateCursor\",\n              value: selectedDate,\n              onChange: e => setSelectedDate(e.target.value) // Update selected date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-hover table-bordered text-center tableSales\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"3vw\"\n                  },\n                  children: \"No.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"5vw\"\n                  },\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"text-start\",\n                  style: {\n                    width: \"29vw\"\n                  },\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"10vw\"\n                  },\n                  children: \"Profit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"10vw\"\n                  },\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    width: \"5vw\"\n                  },\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"align-middle\",\n              children: [filteredBills.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                onClick: () => handleRowClick(row.No),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-start\",\n                  children: row.CustomerName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.Profit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.Amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-outline-danger border-2 fw-bold\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleDeleteRow(row.No);\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"fs-5 text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"3\",\n                  className: \"text-start px-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 81\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: totalProfit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: totalAmount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: addRow,\n            children: \"Add New Bill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Sales, \"2KRjmjDv7eE8MXZGQciGpgGdyOo=\", false, function () {\n  return [useNavigate];\n});\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["useState","useEffect","useNavigate","fetchBillData","deleteBill","getBillById","renumberBills","updateElectronics","fetchElectronicsData","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","Sales","_s","arr","setArr","selectedDate","setSelectedDate","then","res","electronics","setElectronics","navigate","addRow","billNo","length","handleDeleteRow","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","billData","alert","i","ItemNames","itemName","soldQuantity","parseInt","Quantities","itemData","find","item","Item","newStock","Available","stockData","CostPrice","No","updatedArr","totalAmount","reduce","acc","row","parseFloat","Amount","totalProfit","Profit","handleRowClick","filteredBills","filter","console","log","date","children","className","style","fontSize","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","width","map","index","onClick","cursor","CustomerName","stopPropagation","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/jagdi/Desktop/ReactProject/ElectronicsStore/dariyalal_electronics/src/components/Sales.js"],"sourcesContent":["// import { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { fetchBillData, deleteBill, getBillById, renumberBills, updateElectronics, fetchElectronicsData } from './API';\r\n// import Swal from 'sweetalert2';\r\n// import './style.css';\r\n// function Sales() {\r\n\r\n//     const [arr, setArr] = useState([]);\r\n//     const [electronics, setElectronics] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             const billData = await fetchBillData();\r\n//             const electronicsData = await fetchElectronicsData();\r\n//             setArr(billData);\r\n//             setElectronics(electronicsData);\r\n//         };\r\n//         fetchData();    \r\n//     }, []);\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const addRow = () => {\r\n//         const billNo = arr.length + 1;\r\n//         navigate('/sales/bill/' + billNo);\r\n//     };\r\n\r\n//     const handleDeleteRow = async (id) => {\r\n//         Swal.fire({\r\n//             title: \"Are you sure?\",\r\n//             text: \"You won't be able to retrieve the Bill \"+id+\" back!\",\r\n//             icon: \"warning\",\r\n//             showCancelButton: true,\r\n//             confirmButtonColor: \"#3085d6\",\r\n//             cancelButtonColor: \"#d33\",\r\n//             confirmButtonText: \"Yes, delete it!\"\r\n//         })\r\n//             .then(async (result) => {\r\n//                 if (result.isConfirmed) {\r\n//                     const billData = await getBillById(id);\r\n//                     if (!billData) {\r\n//                         alert('Bill not found.');\r\n//                         return;\r\n//                     }\r\n\r\n//                     for (let i = 0; i < billData.ItemNames.length; i++) {\r\n//                         const itemName = billData.ItemNames[i];\r\n//                         const soldQuantity = parseInt(billData.Quantities[i]);\r\n//                         const itemData = electronics.find(item => item.Item === itemName);\r\n//                         if (itemData) {\r\n//                             const newStock = itemData.Available + soldQuantity;\r\n//                             const stockData = {\r\n//                                 Item: itemData.Item,\r\n//                                 Available: newStock,\r\n//                                 CostPrice: parseInt(itemData.CostPrice)\r\n//                             };\r\n//                             updateElectronics(stockData, itemData.No);\r\n//                         }\r\n//                     }\r\n//                     await deleteBill(id, navigate);\r\n//                     await renumberBills(id);\r\n//                     const updatedArr = await fetchBillData();\r\n//                     setArr(updatedArr);\r\n//                 }\r\n//             });\r\n//     }\r\n\r\n//     const totalAmount = arr.reduce((acc, row) => acc + (parseFloat(row.Amount) || 0), 0);\r\n//     const totalProfit = arr.reduce((acc, row) => acc + (parseFloat(row.Profit) || 0), 0);\r\n\r\n//     const handleRowClick = async (id) => {\r\n//         await getBillById(id);\r\n//         navigate('/sales/' + id);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <h1 \r\n//                 className='text-center m-4' \r\n//                 style={{ fontSize: \"50px\", margin: \"25px 30px 25px 30px\" }}\r\n//             >Sales</h1>\r\n//             <div className='container-fluid px-4'>\r\n//                 <div className='row'>\r\n//                     <div className='col my-4 mx-1 fs-5'>\r\n//                         Date: \r\n//                         <span className='ms-2 align-middle'>\r\n//                             <input\r\n//                                 type='date'\r\n//                                 className='form-control d-inline-block w-auto dateCursor'\r\n//                             />\r\n//                         </span>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className='row'>\r\n//                     <div className='col table-responsive'>\r\n//                         <table className='table table-striped table-hover table-bordered text-center tableSales'>\r\n//                             <thead>\r\n//                                 <tr>\r\n//                                     <th style={{ width: \"3vw\" }}>No.</th>\r\n//                                     <th style={{ width: \"5vw\" }}>Date</th>\r\n//                                     <th className='text-start' style={{ width: \"29vw\" }}>Customer</th>\r\n//                                     <th style={{ width: \"10vw\" }}>Profit</th>\r\n//                                     <th style={{ width: \"10vw\" }}>Amount</th>\r\n//                                     <th style={{ width: \"5vw\" }}>Action</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody className='align-middle'>\r\n//                                 {arr.map((row, index) => (\r\n//                                     <tr \r\n//                                         key={index} \r\n//                                         onClick={() => handleRowClick(row.No)} \r\n//                                         style={{ cursor: 'pointer' }}\r\n//                                     >\r\n//                                         <td>\r\n//                                             {index + 1}\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             {row.date}\r\n//                                         </td>\r\n//                                         <td className='text-start'>\r\n//                                             {row.CustomerName}\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             {row.Profit}\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             {row.Amount}\r\n//                                         </td>\r\n//                                         <td>\r\n//                                             <button className='btn btn-outline-danger border-2 fw-bold' onClick={(e) => {\r\n//                                                 e.stopPropagation();\r\n//                                                 handleDeleteRow(row.No)\r\n//                                             }\r\n//                                             }>Delete</button>\r\n//                                         </td>\r\n//                                     </tr>\r\n//                                 ))}\r\n//                                 <tr className='fs-5 text-center'>\r\n//                                     <td colSpan=\"3\" className='text-start px-3'><strong>Total:</strong></td>\r\n//                                     <td><strong>{totalProfit}</strong></td>\r\n//                                     <td><strong>{totalAmount}</strong></td>\r\n//                                     <td></td>\r\n//                                 </tr>\r\n//                             </tbody>\r\n//                         </table>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className='row'>\r\n//                     <div className='col text-center'>\r\n//                         <button className='btn btn-primary' onClick={addRow}>\r\n//                             Add New Bill\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default Sales;\r\n\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchBillData, deleteBill, getBillById, renumberBills, updateElectronics, fetchElectronicsData } from './API';\r\nimport Swal from 'sweetalert2';\r\nimport './style.css';\r\n\r\nfunction Sales() {\r\n\r\n    const [arr, setArr] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState(''); // State for selected date\r\n\r\n    useEffect(() => {\r\n        fetchBillData()\r\n            .then(res => setArr(res));\r\n    }, []);\r\n\r\n    const [electronics, setElectronics] = useState([]);\r\n    useEffect(() => {\r\n        fetchElectronicsData()\r\n            .then(res => setElectronics(res));\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const addRow = () => {\r\n        const billNo = arr.length + 1;\r\n        navigate('/sales/bill/' + billNo);\r\n    };\r\n\r\n    const handleDeleteRow = async (id) => {\r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"You won't be able to retrieve the Bill \" + id + \" back!\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, delete it!\"\r\n        })\r\n            .then(async (result) => {\r\n                if (result.isConfirmed) {\r\n                    const billData = await getBillById(id);\r\n                    if (!billData) {\r\n                        alert('Bill not found.');\r\n                        return;\r\n                    }\r\n\r\n                    for (let i = 0; i < billData.ItemNames.length; i++) {\r\n                        const itemName = billData.ItemNames[i];\r\n                        const soldQuantity = parseInt(billData.Quantities[i]);\r\n                        const itemData = electronics.find(item => item.Item === itemName);\r\n                        if (itemData) {\r\n                            const newStock = itemData.Available + soldQuantity;\r\n                            const stockData = {\r\n                                Item: itemData.Item,\r\n                                Available: newStock,\r\n                                CostPrice: parseInt(itemData.CostPrice)\r\n                            };\r\n                            updateElectronics(stockData, itemData.No);\r\n                        }\r\n                    }\r\n                    await deleteBill(id, navigate);\r\n                    await renumberBills(id);\r\n                    const updatedArr = await fetchBillData();\r\n                    setArr(updatedArr);\r\n                }\r\n            });\r\n    };\r\n\r\n    const totalAmount = arr.reduce((acc, row) => acc + (parseFloat(row.Amount) || 0), 0);\r\n    const totalProfit = arr.reduce((acc, row) => acc + (parseFloat(row.Profit) || 0), 0);\r\n\r\n    const handleRowClick = async (id) => {\r\n        await getBillById(id);\r\n        navigate('/sales/' + id);\r\n    };\r\n\r\n    // Filter the bills based on the selected date\r\n    const filteredBills = selectedDate\r\n        ? arr.filter(row => {\r\n            console.log(row.date);\r\n            return row.date === selectedDate;\r\n        })\r\n        : arr;\r\n    \r\n    return (\r\n        <>\r\n            <h1 \r\n                className='text-center m-4' \r\n                style={{ fontSize: \"50px\", margin: \"25px 30px 25px 30px\" }}\r\n            >Sales</h1>\r\n            <div className='container-fluid px-4'>\r\n                <div className='row'>\r\n                    <div className='col my-4 mx-1 fs-5'>\r\n                        Date: \r\n                        <span className='ms-2 align-middle'>\r\n                            <input\r\n                                type='date'\r\n                                className='form-control d-inline-block w-auto dateCursor'\r\n                                value={selectedDate}\r\n                                onChange={(e) => setSelectedDate(e.target.value)} // Update selected date\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col table-responsive'>\r\n                        <table className='table table-striped table-hover table-bordered text-center tableSales'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: \"3vw\" }}>No.</th>\r\n                                    <th style={{ width: \"5vw\" }}>Date</th>\r\n                                    <th className='text-start' style={{ width: \"29vw\" }}>Customer</th>\r\n                                    <th style={{ width: \"10vw\" }}>Profit</th>\r\n                                    <th style={{ width: \"10vw\" }}>Amount</th>\r\n                                    <th style={{ width: \"5vw\" }}>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='align-middle'>\r\n                                {filteredBills.map((row, index) => (\r\n                                    <tr \r\n                                        key={index} \r\n                                        onClick={() => handleRowClick(row.No)} \r\n                                        style={{ cursor: 'pointer' }}\r\n                                    >\r\n                                        <td>\r\n                                            {index + 1}\r\n                                        </td>\r\n                                        <td>\r\n                                            {row.date}\r\n                                        </td>\r\n                                        <td className='text-start'>\r\n                                            {row.CustomerName}\r\n                                        </td>\r\n                                        <td>\r\n                                            {row.Profit}\r\n                                        </td>\r\n                                        <td>\r\n                                            {row.Amount}\r\n                                        </td>\r\n                                        <td>\r\n                                            <button className='btn btn-outline-danger border-2 fw-bold' onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                handleDeleteRow(row.No);\r\n                                            }}>Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                <tr className='fs-5 text-center'>\r\n                                    <td colSpan=\"3\" className='text-start px-3'><strong>Total:</strong></td>\r\n                                    <td><strong>{totalProfit}</strong></td>\r\n                                    <td><strong>{totalAmount}</strong></td>\r\n                                    <td></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col text-center'>\r\n                        <button className='btn btn-primary' onClick={addRow}>\r\n                            Add New Bill\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sales;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,EAAEC,UAAU,EAAEC,WAAW,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,oBAAoB,QAAQ,OAAO;AACtH,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtDC,SAAS,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}